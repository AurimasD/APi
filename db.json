openapi: 3.0.1
info:
  title: MySEBAPI
  version: 1.5.1
  description: this great api from SEB
  termsOfService: https://www.example.com/tos
  contact:
    email: contact@example.com
    name: IT Team
    url: https://www.example.com/contact
  license:
    name: License
    url: https://www.example.com/license
servers:
  - url: http://localhost:3000
    variables: {}
    description: local fake server
  - url: https://my-json-server.typicode.com/bearc0025/api
    variables: {}
    description: my fake api server on github
paths:
  /users:
    summary: user level operations
    description: fetch users, create new users
    get:
      summary: fetch users from server
      description: returns users from server
      operationId: fetchUsers
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullUser'
        default:
          description: Default error sample response
      tags:
        - users
    post:
      summary: create user
      description: store user on server
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostNewUser'
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullUser'
        default:
          description: Default error sample response
      tags:
        - users
components:
  schemas:
    PostNewUser:
      type: object
      properties:
        username:
          type: string
          example: bear2133
        score:
          type: integer
          example: 66
        active:
          type: boolean
          example: true
    FullUser:
      type: object
      properties:
        id:
          type: string
          example: 1234asdf
        username:
          type: string
          example: bear2133
        score:
          type: integer
          example: 66
        active:
          type: boolean
          example: true
