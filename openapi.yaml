openapi: 3.0.1
info:
  title: My API
  version: '1.0'
  description: some api
  termsOfService: https://www.example.com/tos
  contact:
    email: contact@email.com
    name: My Team
    url: https://www.example.com/contact
  license:
    name: My License
    url: https://www.example.com/license
servers:
  - url: http://localhost:3000
    variables: {}
    description: local fake server
  - url: https://my-json-server.typicode.com/bearc0025/api
    variables: {}
    description: my fake github server
paths:
  /users:
    summary: base user level operations
    description: fetch all users, create new users
    get:
      summary: fetch all users
      description: return all users from server
      operationId: fetchUsers
      responses:
        '200':
          $ref: '#/components/responses/UserArrayResponseBody'
        default:
          description: Default error sample response
      tags:
        - Users
    post:
      summary: create a user
      description: store a user on the server
      operationId: createUser
      requestBody:
        $ref: '#/components/requestBodies/UserPostBody'
      responses:
        '201':
          $ref: '#/components/responses/UserReqBody'
        default:
          description: Default error sample response
      tags:
        - Users
components:
  responses:
    UserArrayResponseBody:
      description: array of users
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserArray'
    UserReqBody:
      description: successful creation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FullUser'   
  requestBodies:
    UserPostBody:
      description: create a new user
      required: true
      content:
        application/json:
          schema: 
            $ref: '#/components/schemas/UserPostReq'
  schemas:
    UserArray:
      type: array
      items:
        $ref: '#/components/schemas/FullUser'
    UserPostReq:
      type: object
      properties:
        username:
          type: string
          example: bearnew
        score:
          type: integer
          example: 66
        active:
          type: boolean
          example: false
    FullUser:
      allOf:
        - type: object
          properties:
            id:
              type: string
              example: qwerty
        - $ref: '#/components/schemas/UserPostReq'
