openapi: 3.0.1
info:
  title: MySEBAPI
  version: 1.0.1
  description: My SEB api for...
  termsOfService: https://www.example.com/tos
  contact:
    email: support@example.com
    name: API Support
    url: https://www.example.com/contact
  license:
    name: License
    url: https://www.example.com/license
servers:
  - url: http://localhost:3000
    variables: {}
    description: My local fake server
  - url: https://my-json-server.typicode.com/bearc0025/api
    variables: {}
    description: My fake github server
paths:
  /users:
    summary: user level operations
    description: fetch all users, create new user
    get:
      summary: fetch all users
      description: returns all users from server
      operationId: fetchUsers
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullUser'
        default:
          description: Default error sample response
      tags:
        - users
    post:
      summary: create a new user
      description: store a user on the server
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
      responses:
        '201':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullUser'
        default:
          description: Default error sample response
      tags:
        - users
components:
  schemas:
    NewUser:
      type: object
      properties:
        username: 
          type: string
          example: bearnew
        score:
          type: integer
          example: 56
        active: 
          type: boolean
          example: true
    FullUser:
      type: object
      properties:
        id:
          type: string
          example: 1234asdfasdf
        username:
          type: string
          example: bear
        score:
          type: integer
          example: 55
        active:
          type: boolean
          example: true
