openapi: 3.0.1
info:
  title: MyAPISEBPM1
  version: '1.0'
  description: my api for data using...
  termsOfService: https://www.example.com/tos
  contact:
    email: test@email.com
    name: Support Team
    url: https://www.example.com/support
  license:
    name: My License
    url: https://www.example.com/lic
servers:
  - url: http://localhost:3000
    variables: {}
    description: my local server
  - url: https://my-json-server.typicode.com/bearc0025/api
    variables: {}
    description: my fake server
  - url: https://my-json-server.typicode.com/typicode/demo
    variables: {}
    description: my demo server
  - url: https://api.example.com/{vers}
    variables:
      vers:
        default: v1
        enum:
          - v1
          - v2
        description: version of api
    description: server variable
paths:
  /posts:
    summary: posts on the server
    description: resource for posts at the parent level
    get:
      summary: fetch all posts
      description: return posts from server
      operationId: fetchPosts
      responses:
        default:
          description: Default sample response
      tags:
        - posts
    post:
      summary: create new post
      description: store post on server
      operationId: createPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostBody'
      responses:
        2XX:
          description: successful post
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                    example: new post
                  author:
                    type: string
                    example: bear
                  id:
                    type: integer
                    example: 12
        default:
          description: Default error sample response
      tags:
        - posts
  /comments:
    summary: comments on the server
    description: resource for comments at the parent level
    get:
      summary: fetch all comments
      description: return comments from server
      operationId: fetchComments
      responses:
        default:
          description: Default sample response
      tags:
        - comments
  /posts/{postId}:
    summary: operations on a specific post
    description: get, patch, delete operations
    get:
      summary: fetch one post
      description: get one post from the server
      operationId: fetchPost
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
            minimum: 0
            example: 1
      responses:
        default:
          description: Default error sample response
      tags:
        - post
components:
  schemas:
    PostBody:
      type: object
      properties:
        title:
          type: string
          example: new post
        author:
          type: string
          example: bear
