openapi: 3.0.1
info:
  title: My API
  version: '1.0'
  description: some great api
  termsOfService: https://www.example.com/
  contact:
    email: team@example.com
    name: My Team
    url: https://www.example.com/contact
  license:
    name: My License
    url: https://www.example.com/license
servers:
  - url: http://localhost:3000/
    variables: {}
    description: local server
  - url: https://my-json-server.typicode.com/bearc0025/api
    variables: {}
    description: demo server at github
paths:
  /users:
    summary: user level operations
    description: fetch all users, create new user
    get:
      summary: Accounts table
      description: return all users from server
      operationId: fetchUsers
      responses:
        '200':
          $ref: '#/components/responses/UserArrayResponseBody'
        default:
          $ref: '#/components/responses/DefaultResponse'
      tags:
        - users
    post:
      summary: Create a new User
      description: Store a User on the server
      operationId: createUser
      requestBody:
        $ref: '#/components/requestBodies/UserPostBody'
      responses:
        '201':
          $ref: '#/components/responses/UserRespBody'
        default:
          $ref: '#/components/responses/DefaultResponse'
      tags:
        - users
components:
  responses:
    DefaultResponse:
      description: default message from server
      content:
        application/json:
          schema:
            type: object
            properties:
              code: 
                type: integer
                example: 123
              message:
                type: string
                example: error...
    UserArrayResponseBody:
      description: response of users array
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserArray'
    UserRespBody:
      description: successful response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FullUser'
  requestBodies:
    UserPostBody:
      description: body of user
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostNewUser'
  schemas:
    UserArray:
      type: array
      items:
        $ref: '#/components/schemas/FullUser'
    PostNewUser:
      type: object
      properties:
        username:
          type: string
          example: bear
        score:
          type: integer
          example: 55
        active:
          type: boolean
          example: true
    FullUser:
      allOf:
        - $ref: '#/components/schemas/PostNewUser'
        - type: object
          properties:
            id:
              type: string
              example: qwerty
