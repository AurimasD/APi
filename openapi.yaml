openapi: 3.0.1
info:
  title: MyAPISEBPM1
  version: '1.0'
  description: my api for data using...
  termsOfService: https://www.example.com/tos
  contact:
    email: test@email.com
    name: Support Team
    url: https://www.example.com/support
  license:
    name: My License
    url: https://www.example.com/lic
servers:
  - url: http://localhost:3000/
    variables: {}
    description: my local server
  - url: https://my-json-server.typicode.com/bearc0025/api
    variables: {}
    description: my fake server
  - url: https://my-json-server.typicode.com/typicode/demo
    variables: {}
    description: my demo server
  - url: http://api.example/{version}
    variables:
      version:
        default: v1
        enum:
          - v1
          - v2
        description: version of server
    description: my api
paths:
  /posts:
    summary: posts on the server
    description: resource for posts at the parent level
    get:
      summary: fetch all posts
      description: return posts from server
      operationId: fetchPosts
      responses:
        default:
          description: Default sample response
      tags:
        - posts
    post:
      summary: create new post
      description: store new post on the server
      operationId: createPost
      requestBody:
        $ref: '#/components/requestBodies/PostReq'
      responses:
        2XX:
          $ref: '#/components/responses/PostResp'
        default:
          description: Default error sample response
      tags:
        - post
  /comments:
    summary: comments on the server
    description: resource for comments at the parent level
    get:
      summary: fetch all comments
      description: return comments from server
      operationId: fetchComments
      responses:
        default:
          description: Default sample response
      tags:
        - comments
  /posts/{postId}:
    summary: post level operations
    description: fetch, update, delete a post
    parameters:
      - $ref: '#/components/parameters/PostId'
    get:
      summary: fetch one post
      description: fetch a post from the server
      operationId: fetchPost
      responses:
        2XX:
          $ref: '#/components/responses/PostResp'
        default:
          description: Default error sample response
      tags:
        - post
components:
  requestBodies:
    PostReq:
      description: post body sent to server
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewPostBody'
  responses:
    PostResp:
      description: post body sent from server
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostBody'
  parameters:
    PostId:
      name: postId
      in: path
      required: true
      schema:
        type: integer
        example: 1
        minimum: 0
  schemas:
    NewPostBody:
      type: object
      properties:
        title:
          type: string
          example: my new post
        author:
          type: string
          example: bear
    PostBody:
      type: object
      properties:
        id:
          type: integer
          example: 45
        title:
          type: string
          example: my new post
        author:
          type: string
          example: bear
